{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "profiles_dashboard_name": {
            "defaultValue": "dashboard",
            "type": "String"
        },
        "sites_kafka_server_name": {
            "defaultValue": "kafka-server",
            "type": "String"
        },
        "serverfarms_funtion_name": {
            "defaultValue": "funtion",
            "type": "String"
        },
        "sites_backend_server_name": {
            "defaultValue": "backend-server",
            "type": "String"
        },
        "sites_nodeserver_bind_name": {
            "defaultValue": "nodeserver-bind",
            "type": "String"
        },
        "frontdoors_frontkey_name": {
            "defaultValue": "frontkey",
            "type": "String"
        },
        "sites_dashboard_fontend_name": {
            "defaultValue": "dashboard-fontend",
            "type": "String"
        },
        "sites_deviceregisterlog_name": {
            "defaultValue": "deviceregisterlog",
            "type": "String"
        },
        "namespaces_kafka_listner_name": {
            "defaultValue": "kafka-listner",
            "type": "String"
        },
        "vaults_dashboardhandler_name": {
            "defaultValue": "dashboardhandler",
            "type": "String"
        },
        "virtualMachines_kafkaserver_name": {
            "defaultValue": "kafkaserver",
            "type": "String"
        },
        "virtualNetworks_kafka_server_name": {
            "defaultValue": "kafka-server",
            "type": "String"
        },
        "servers_sensor_data_backup_name": {
            "defaultValue": "sensor-data-backup",
            "type": "String"
        },
        "components_dashboard_fontend_name": {
            "defaultValue": "dashboard-fontend",
            "type": "String"
        },
        "components_deviceregisterlog_name": {
            "defaultValue": "deviceregisterlog",
            "type": "String"
        },
        "publicIPAddresses_kafka_server_name": {
            "defaultValue": "kafka-server",
            "type": "String"
        },
        "storageAccounts_frontendholder_name": {
            "defaultValue": "frontendholder",
            "type": "String"
        },
        "serverfarms_ASP_smartdashboard_ae63_name": {
            "defaultValue": "ASP-smartdashboard-ae63",
            "type": "String"
        },
        "networkInterfaces_kafkaserver141_name": {
            "defaultValue": "kafkaserver141",
            "type": "String"
        },
        "publicIPAddresses_kafkaserver_ip_name": {
            "defaultValue": "kafkaserver-ip",
            "type": "String"
        },
        "azureFirewalls_kafka_server_guard_name": {
            "defaultValue": "kafka-server-guard",
            "type": "String"
        },
        "virtualNetworks_smart_dashboard_vnet_name": {
            "defaultValue": "smart-dashboard-vnet",
            "type": "String"
        },
        "networkSecurityGroups_kafkaserver_nsg_name": {
            "defaultValue": "kafkaserver-nsg",
            "type": "String"
        },
        "privateEndpoints_kfka_node_private_end_name": {
            "defaultValue": "kfka-node-private-end",
            "type": "String"
        },
        "storageAccounts_storageaccountsmartaaac_name": {
            "defaultValue": "storageaccountsmartaaac",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___nodeserver_kafka_name": {
            "defaultValue": "failure anomalies - nodeserver-kafka",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___dashboard_fontend_name": {
            "defaultValue": "failure anomalies - dashboard-fontend",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___deviceregisterlog_name": {
            "defaultValue": "failure anomalies - deviceregisterlog",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___node_server_kafka_listner_name": {
            "defaultValue": "failure anomalies - node-server-kafka-listner",
            "type": "String"
        },
        "networkInterfaces_kfka_node_private_end_nic_0176929a_48dc_4dbe_a19d_35c9612fdf0c_name": {
            "defaultValue": "kfka-node-private-end.nic.0176929a-48dc-4dbe-a19d-35c9612fdf0c",
            "type": "String"
        },
        "components_nodeserver_kafka_externalid": {
            "defaultValue": "/subscriptions/b0ddab58-f113-436e-995f-f7b87e39690a/resourceGroups/smart-dashboard/providers/microsoft.insights/components/nodeserver-kafka",
            "type": "String"
        },
        "components_node_server_kafka_listner_externalid": {
            "defaultValue": "/subscriptions/b0ddab58-f113-436e-995f-f7b87e39690a/resourceGroups/smart-dashboard/providers/microsoft.insights/components/node-server-kafka-listner",
            "type": "String"
        },
        "serverfarms_ASP_test_83de_externalid": {
            "defaultValue": "/subscriptions/b0ddab58-f113-436e-995f-f7b87e39690a/resourceGroups/test/providers/Microsoft.Web/serverfarms/ASP-test-83de",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Cdn/profiles",
            "apiVersion": "2020-04-15",
            "name": "[parameters('profiles_dashboard_name')]",
            "location": "Global",
            "sku": {
                "name": "Standard_Microsoft"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.DBforMySQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[parameters('servers_sensor_data_backup_name')]",
            "location": "eastus",
            "sku": {
                "name": "GP_Gen5_4",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 4
            },
            "properties": {
                "storageProfile": {
                    "storageMB": 102400,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled",
                    "storageAutogrow": "Enabled"
                },
                "version": "5.7",
                "sslEnforcement": "Disabled",
                "minimalTlsVersion": "TLSEnforcementDisabled",
                "infrastructureEncryption": "Disabled",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_dashboard_fontend_name')]",
            "location": "eastus",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_deviceregisterlog_name')]",
            "location": "eastus",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('vaults_dashboardhandler_name')]",
            "location": "eastus",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "341c02c3-f673-4429-b2db-5fa4a986e567",
                "accessPolicies": [
                    {
                        "tenantId": "341c02c3-f673-4429-b2db-5fa4a986e567",
                        "objectId": "8648bebb-5102-4255-be65-63ca6daffa5a",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true
            }
        },
        {
            "type": "Microsoft.Network/frontdoors",
            "apiVersion": "2020-05-01",
            "name": "[parameters('frontdoors_frontkey_name')]",
            "location": "Global",
            "properties": {
                "resourceState": "Enabled",
                "backendPools": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), '/BackendPools/backend-appservice-sensor')]",
                        "name": "backend-appservice-sensor",
                        "properties": {
                            "backends": [
                                {
                                    "address": "dashboard-fontend.azurewebsites.net",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "dashboard-fontend.azurewebsites.net",
                                    "enabledState": "Enabled"
                                }
                            ],
                            "healthProbeSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), '/healthprobesettings/healthprobesettings-1596660603386')]"
                            },
                            "loadBalancingSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), '/loadbalancingsettings/loadbalancingsettings-1596660603386')]"
                            },
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "healthProbeSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), '/HealthProbeSettings/healthProbeSettings-1596660603386')]",
                        "name": "healthProbeSettings-1596660603386",
                        "properties": {
                            "intervalInSeconds": 30,
                            "path": "/",
                            "protocol": "Https",
                            "resourceState": "Enabled",
                            "enabledState": "Enabled",
                            "healthProbeMethod": "Get"
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), concat('/FrontendEndpoints/', parameters('frontdoors_frontkey_name'), '-azurefd-net'))]",
                        "name": "[concat(parameters('frontdoors_frontkey_name'), '-azurefd-net')]",
                        "properties": {
                            "hostName": "[concat(parameters('frontdoors_frontkey_name'), '.azurefd.net')]",
                            "sessionAffinityEnabledState": "Enabled",
                            "sessionAffinityTtlSeconds": 0,
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), '/LoadBalancingSettings/loadBalancingSettings-1596660603386')]",
                        "name": "loadBalancingSettings-1596660603386",
                        "properties": {
                            "additionalLatencyMilliseconds": 0,
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "routingRules": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), '/RoutingRules/sensordata')]",
                        "name": "sensordata",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), concat('/frontendendpoints/', parameters('frontdoors_frontkey_name'), '-azurefd-net'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "resourceState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "MatchRequest",
                                "backendPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontkey_name')), '/backendPools/backend-appservice-sensor')]"
                                }
                            }
                        }
                    }
                ],
                "backendPoolsSettings": {
                    "enforceCertificateNameCheck": "Enabled",
                    "sendRecvTimeoutSeconds": 30
                },
                "enabledState": "Enabled",
                "friendlyName": "[parameters('frontdoors_frontkey_name')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_kafkaserver_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTPS",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 340,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('publicIPAddresses_kafka_server_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "ipAddress": "52.186.103.176",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('publicIPAddresses_kafkaserver_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_kafka_server_name')]",
            "location": "eastus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_smart_dashboard_vnet_name')]",
            "location": "eastus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Relay/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('namespaces_kafka_listner_name')]",
            "location": "East US",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_frontendholder_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_storageaccountsmartaaac_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_smartdashboard_ae63_name')]",
            "location": "East US",
            "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "family": "Pv2",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_funtion_name')]",
            "location": "East US",
            "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "family": "Pv2",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_dashboard_fontend_name')]",
            "location": "East US",
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_dashboard_fontend_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_dashboard_fontend_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[parameters('serverfarms_ASP_test_83de_externalid')]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___nodeserver_kafka_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[parameters('components_nodeserver_kafka_externalid')]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___node_server_kafka_listner_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[parameters('components_node_server_kafka_listner_externalid')]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints",
            "apiVersion": "2020-04-15",
            "name": "[concat(parameters('profiles_dashboard_name'), '/smart', parameters('profiles_dashboard_name'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('profiles_dashboard_name'))]"
            ],
            "properties": {
                "originHostHeader": "frontkey.azurefd.net",
                "isHttpAllowed": true,
                "isHttpsAllowed": true,
                "queryStringCachingBehavior": "IgnoreQueryString",
                "origins": [
                    {
                        "name": "frontendholder-blob-core-windows-net",
                        "properties": {
                            "hostName": "frontkey.azurefd.net",
                            "httpPort": 80,
                            "httpsPort": 443,
                            "priority": 1,
                            "weight": 1000,
                            "enabled": true
                        }
                    }
                ],
                "originGroups": [],
                "contentTypesToCompress": [
                    "application/eot",
                    "application/font",
                    "application/font-sfnt",
                    "application/javascript",
                    "application/json",
                    "application/opentype",
                    "application/otf",
                    "application/pkcs7-mime",
                    "application/truetype",
                    "application/ttf",
                    "application/vnd.ms-fontobject",
                    "application/xhtml+xml",
                    "application/xml",
                    "application/xml+rss",
                    "application/x-font-opentype",
                    "application/x-font-truetype",
                    "application/x-font-ttf",
                    "application/x-httpd-cgi",
                    "application/x-javascript",
                    "application/x-mpegurl",
                    "application/x-opentype",
                    "application/x-otf",
                    "application/x-perl",
                    "application/x-ttf",
                    "font/eot",
                    "font/ttf",
                    "font/otf",
                    "font/opentype",
                    "image/svg+xml",
                    "text/css",
                    "text/csv",
                    "text/html",
                    "text/javascript",
                    "text/js",
                    "text/plain",
                    "text/richtext",
                    "text/tab-separated-values",
                    "text/xml",
                    "text/x-script",
                    "text/x-component",
                    "text/x-java-source"
                ],
                "isCompressionEnabled": true,
                "geoFilters": [],
                "urlSigningKeys": []
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/audit_log_enabled')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/audit_log_events')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "CONNECTION",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/audit_log_exclude_users')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "azure_superuser",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/audit_log_include_users')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/binlog_expire_logs_seconds')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/binlog_group_commit_sync_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/binlog_group_commit_sync_no_delay_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/binlog_row_image')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "minimal",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/binlog_sum_size_for_stop_pct_max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/character_set_server')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "latin1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/collation_server')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "latin1_swedish_ci",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/default_week_format')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/div_precision_increment')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/eq_range_index_dive_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/event_scheduler')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/flush_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/ft_query_expansion_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/group_concat_max_len')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/init_connect')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_adaptive_flushing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_adaptive_flushing_lwm')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_adaptive_hash_index')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_adaptive_hash_index_parts')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_adaptive_max_sleep_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "150000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_autoextend_increment')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_autoinc_lock_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_buffer_pool_dump_pct')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "25",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_buffer_pool_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "16106127360",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_change_buffer_max_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "25",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_change_buffering')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "all",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_cmp_per_index_enabled')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_commit_concurrency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_compression_failure_threshold_pct')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_compression_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "6",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_compression_pad_pct_max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_concurrency_tickets')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_deadlock_detect')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_default_row_format')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "DYNAMIC",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_file_format')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "Barracuda",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_file_per_table')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_fill_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "8000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_enable_stopword')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_max_token_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "84",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_min_token_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_num_word_optimize')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "2000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_result_cache_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "2000000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_sort_pll_degree')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_ft_total_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "640000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_io_capacity')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_io_capacity_max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "2000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_large_prefix')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_lock_wait_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_log_compressed_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_lru_scan_depth')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_max_dirty_pages_pct')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "75",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_max_dirty_pages_pct_lwm')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_max_purge_lag')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_max_purge_lag_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_old_blocks_pct')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "37",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_old_blocks_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_online_alter_log_max_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "134217728",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_optimize_fulltext_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_page_cleaners')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_purge_batch_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "300",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_purge_rseg_truncate_frequency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_purge_threads')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_random_read_ahead')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_read_ahead_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "56",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_read_io_threads')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_rollback_segments')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_stats_auto_recalc')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_stats_include_delete_marked')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_stats_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "nulls_equal",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_stats_on_metadata')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_stats_persistent')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_stats_persistent_sample_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_stats_transient_sample_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_sync_array_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_table_locks')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_thread_concurrency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_thread_sleep_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "10000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/innodb_write_io_threads')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/interactive_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "28800",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/join_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "262144",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/local_infile')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/lock_wait_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "31536000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/log_bin_trust_function_creators')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/log_output')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "FILE",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/log_queries_not_using_indexes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/log_slow_admin_statements')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/log_slow_slave_statements')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/log_throttle_queries_not_using_indexes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/long_query_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/lower_case_table_names')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_allowed_packet')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "536870912",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_connect_errors')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "625",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_digest_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_error_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_execution_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_heap_table_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "16777216",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_join_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "18446744073709551615",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_length_for_sort_data')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_points_in_geometry')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "65536",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_prepared_stmt_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "16382",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_seeks_for_key')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4294967295",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_sort_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_sp_recursion_depth')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_user_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/max_write_lock_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4294967295",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/min_examined_row_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/net_buffer_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "16384",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/net_read_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "120",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/net_retry_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/net_write_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "240",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/ngram_token_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/optimizer_prune_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/optimizer_search_depth')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "62",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/optimizer_switch')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "default",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/parser_max_mem_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "18446744073709551615",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/performance_schema')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/preload_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "32768",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_cache_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1048576",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_cache_min_res_unit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_cache_type')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_prealloc_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_store_capture_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "15",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_store_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "NONE",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_store_capture_utility_queries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "NO",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_store_retention_period_in_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "7",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_store_wait_sampling_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "NONE",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/query_store_wait_sampling_frequency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/range_alloc_block_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/range_optimizer_max_mem_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "8388608",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/read_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/redirect_enabled')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/relay_log_space_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1073741824",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/replicate_wild_ignore_table')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "mysql.%",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/server_id')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "275947378",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/session_track_schema')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "ON",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/session_track_state_change')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/show_compatibility_56')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/skip_show_database')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/slave_net_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "60",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/slow_query_log')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/sort_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "524288",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/sql_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/stored_program_cache')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/table_definition_cache')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/table_open_cache')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/table_open_cache_instances')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/thread_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "14",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/thread_handling')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "one-thread-per-connection",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/thread_pool_batch_max_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/thread_pool_batch_wait_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/thread_pool_max_threads')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "65535",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/thread_pool_min_threads')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/time_zone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "SYSTEM",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/tmp_table_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "16777216",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/transaction_alloc_block_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/transaction_prealloc_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/tx_isolation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "REPEATABLE-READ",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/updatable_views_with_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "YES",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/wait_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "value": "120",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/information_schema')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "charset": "utf8",
                "collation": "utf8_general_ci"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/mysql')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "charset": "latin1",
                "collation": "latin1_swedish_ci"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/performance_schema')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "charset": "utf8",
                "collation": "utf8_general_ci"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/smart_dashboard')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "charset": "latin1",
                "collation": "latin1_swedish_ci"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/sys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "charset": "utf8",
                "collation": "utf8_general_ci"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/ClientIPAddress_2020-8-2_14-49-23')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "startIpAddress": "175.157.47.131",
                "endIpAddress": "175.157.47.131"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/testip')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "startIpAddress": "123.231.85.123",
                "endIpAddress": "123.231.85.123"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/testip01')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "startIpAddress": "123.231.84.226",
                "endIpAddress": "123.231.84.226"
            }
        },
        {
            "type": "Microsoft.DBforMySQL/servers/securityAlertPolicies",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_sensor_data_backup_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_sensor_data_backup_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_kfka_node_private_end_nic_0176929a_48dc_4dbe_a19d_35c9612fdf0c_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_smart_dashboard_vnet_name'), 'default')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "sites-sites.privateEndpoint",
                        "properties": {
                            "privateIPAddress": "10.0.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_smart_dashboard_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('networkSecurityGroups_kafkaserver_nsg_name'), '/HTTP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafkaserver_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 340,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('networkSecurityGroups_kafkaserver_nsg_name'), '/HTTPS')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafkaserver_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 320,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('networkSecurityGroups_kafkaserver_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafkaserver_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_kafka_server_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_kafka_server_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_smart_dashboard_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_smart_dashboard_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Relay/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_kafka_listner_name'), '/RootManageSharedAccessKey')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Relay/namespaces', parameters('namespaces_kafka_listner_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.Relay/namespaces/HybridConnections",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_kafka_listner_name'), '/kafka-node-tunnel')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Relay/namespaces', parameters('namespaces_kafka_listner_name'))]"
            ],
            "properties": {
                "requiresClientAuthorization": true,
                "userMetadata": "[[{\"key\":\"endpoint\",\"value\":\"2ef215efe0d2:9092\"}]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_frontendholder_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_frontendholder_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountsmartaaac_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountsmartaaac_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_frontendholder_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_frontendholder_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountsmartaaac_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountsmartaaac_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_backend_server_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_smartdashboard_ae63_name'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_backend_server_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_backend_server_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_smartdashboard_ae63_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_deviceregisterlog_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_funtion_name'))]"
            ],
            "kind": "functionapp,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_deviceregisterlog_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_deviceregisterlog_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_funtion_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_kafka_server_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_smartdashboard_ae63_name'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_kafka_server_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_kafka_server_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_smartdashboard_ae63_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_nodeserver_bind_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_smartdashboard_ae63_name'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_nodeserver_bind_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_nodeserver_bind_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_smartdashboard_ae63_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_backend_server_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backend_server_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "JAVA|8-jre8",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$backend-server",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_dashboard_fontend_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dashboard_fontend_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "nodeVersion": "10.14.1",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$dashboard-fontend",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": true,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://frontkey.azurefd.net"
                    ],
                    "supportCredentials": true
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_deviceregisterlog_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_deviceregisterlog_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "JAVA|8",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$deviceregisterlog",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": false,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com",
                        "http://localhost:4200",
                        "https://dashboard-fontend.azurewebsites.net",
                        "https://smartdashboard.azureedge.net"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_kafka_server_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_kafka_server_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "JAVA|8-jre8",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$kafka-server",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": true,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": true,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_nodeserver_bind_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_nodeserver_bind_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "NODE|10-lts",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$nodeserver-bind",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": true,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "http://localhost:4200",
                        "https://nodeserver-bind.azurewebsites.net"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_nodeserver_bind_name'), '/07995ee7d17140b69a17bdfbf89e6bb1')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_nodeserver_bind_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2020-08-06T12:11:56.152652Z",
                "end_time": "2020-08-06T12:12:03.6851058Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_deviceregisterlog_name'), '/292a4313a8be48b5a4a333c4d983b55b')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_deviceregisterlog_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2020-08-07T08:02:01.5853351Z",
                "end_time": "2020-08-07T08:02:02.2241865Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_deviceregisterlog_name'), '/408019f921ef417e836b87a437232189')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_deviceregisterlog_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2020-08-07T05:56:54.1594599Z",
                "end_time": "2020-08-07T05:56:56.5575455Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_deviceregisterlog_name'), '/67b519bf336d4e58a80dc4b75a36ad7a')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_deviceregisterlog_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2020-08-07T08:45:50.915727Z",
                "end_time": "2020-08-07T08:45:52.1326504Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_nodeserver_bind_name'), '/9665920a3fc642d19e3bb346b089f387')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_nodeserver_bind_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2020-08-06T12:55:43.3707322Z",
                "end_time": "2020-08-06T12:55:59.4166787Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_deviceregisterlog_name'), '/e2d5151fcea742498d003170e0dadd2c')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_deviceregisterlog_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2020-08-07T07:57:34.3833854Z",
                "end_time": "2020-08-07T07:57:35.8092869Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_deviceregisterlog_name'), '/HttpExample')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_deviceregisterlog_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://deviceregisterlog.azurewebsites.net/admin/vfs/home/site/wwwroot/HttpExample/",
                "script_href": "https://deviceregisterlog.azurewebsites.net/admin/vfs/home/site/wwwroot/device-log-1.0-SNAPSHOT.jar",
                "config_href": "https://deviceregisterlog.azurewebsites.net/admin/vfs/home/site/wwwroot/HttpExample/function.json",
                "href": "https://deviceregisterlog.azurewebsites.net/admin/functions/HttpExample",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_backend_server_name'), '/', parameters('sites_backend_server_name'), '.azurewebsites.net')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_backend_server_name'))]"
            ],
            "properties": {
                "siteName": "backend-server",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_dashboard_fontend_name'), '/', parameters('sites_dashboard_fontend_name'), '.azurewebsites.net')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dashboard_fontend_name'))]"
            ],
            "properties": {
                "siteName": "dashboard-fontend",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_deviceregisterlog_name'), '/', parameters('sites_deviceregisterlog_name'), '.azurewebsites.net')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_deviceregisterlog_name'))]"
            ],
            "properties": {
                "siteName": "deviceregisterlog",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_kafka_server_name'), '/', parameters('sites_kafka_server_name'), '.azurewebsites.net')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_kafka_server_name'))]"
            ],
            "properties": {
                "siteName": "kafka-server",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_nodeserver_bind_name'), '/', parameters('sites_nodeserver_bind_name'), '.azurewebsites.net')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_nodeserver_bind_name'))]"
            ],
            "properties": {
                "siteName": "nodeserver-bind",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___dashboard_fontend_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dashboard_fontend_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_dashboard_fontend_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___deviceregisterlog_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_deviceregisterlog_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_deviceregisterlog_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints/origins",
            "apiVersion": "2020-04-15",
            "name": "[concat(parameters('profiles_dashboard_name'), '/smart', parameters('profiles_dashboard_name'), '/frontendholder-blob-core-windows-net')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/endpoints', parameters('profiles_dashboard_name'), concat('smart', parameters('profiles_dashboard_name')))]",
                "[resourceId('Microsoft.Cdn/profiles', parameters('profiles_dashboard_name'))]"
            ],
            "properties": {
                "hostName": "frontkey.azurefd.net",
                "httpPort": 80,
                "httpsPort": 443,
                "enabled": true,
                "priority": 1,
                "weight": 1000
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_kafkaserver_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_kafkaserver141_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_frontendholder_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_kafkaserver_name'), '_OsDisk_1_f1353f04ca87418bb4095c6934c36859')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_kafkaserver_name'), '_OsDisk_1_f1353f04ca87418bb4095c6934c36859'))]"
                        }
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_kafkaserver_name')]",
                    "adminUsername": "isuru",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_kafkaserver141_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_frontendholder_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-05-01",
            "name": "[parameters('azureFirewalls_kafka_server_guard_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_kafka_server_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_kafka_server_name'), 'AzureFirewallSubnet')]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "kafka-server",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_kafka_server_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_kafka_server_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [
                    {
                        "name": "kafka",
                        "properties": {
                            "priority": 200,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "allow-publish-data",
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        },
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [
                                        "AppServiceEnvironment"
                                    ],
                                    "targetFqdns": [],
                                    "sourceAddresses": [
                                        "192.168.12.56"
                                    ],
                                    "sourceIpGroups": []
                                }
                            ]
                        }
                    }
                ],
                "natRuleCollections": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[parameters('privateEndpoints_kfka_node_private_end_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_kafka_server_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_smart_dashboard_vnet_name'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_kfka_node_private_end_name'), '-a7c5')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('sites_kafka_server_name'))]",
                            "groupIds": [
                                "sites"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Disconnected"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_smart_dashboard_vnet_name'), 'default')]"
                },
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Relay/namespaces/HybridConnections/authorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_kafka_listner_name'), '/kafka-node-tunnel/defaultListener')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Relay/namespaces/HybridConnections', parameters('namespaces_kafka_listner_name'), 'kafka-node-tunnel')]",
                "[resourceId('Microsoft.Relay/namespaces', parameters('namespaces_kafka_listner_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen"
                ]
            }
        },
        {
            "type": "Microsoft.Relay/namespaces/HybridConnections/authorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_kafka_listner_name'), '/kafka-node-tunnel/defaultSender')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Relay/namespaces/HybridConnections', parameters('namespaces_kafka_listner_name'), 'kafka-node-tunnel')]",
                "[resourceId('Microsoft.Relay/namespaces', parameters('namespaces_kafka_listner_name'))]"
            ],
            "properties": {
                "rights": [
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_frontendholder_name'), '/default/$web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_frontendholder_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_frontendholder_name'))]"
            ],
            "properties": {
                "publicAccess": "Container"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_frontendholder_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_frontendholder_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_frontendholder_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountsmartaaac_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountsmartaaac_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountsmartaaac_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_frontendholder_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_frontendholder_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_frontendholder_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccountsmartaaac_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountsmartaaac_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountsmartaaac_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_frontendholder_name'), '/default/bootdiagnostics-kafkaserv-ef2a3f49-5a58-4cd5-982d-571b7d2b107a')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_frontendholder_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_frontendholder_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_kafkaserver141_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_kafkaserver_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_smart_dashboard_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafkaserver_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_kafkaserver_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_smart_dashboard_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafkaserver_nsg_name'))]"
                }
            }
        }
    ]
}